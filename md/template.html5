<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="$lang$" xml:lang="$lang$"$if(dir)$ dir="$dir$"$endif$>
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc-markdown-css-theme" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
$for(author-meta)$
  <meta name="author" content="$author-meta$" />
$endfor$
$if(date-meta)$
  <meta name="dcterms.date" content="$date-meta$" />
$endif$
$if(keywords)$
  <meta name="keywords" content="$for(keywords)$$keywords$$sep$, $endfor$" />
$endif$
$if(description-meta)$
  <meta name="description" content="$description-meta$" />
$endif$
  <title>$if(title-prefix)$$title-prefix$ – $endif$$pagetitle$</title>
$for(css)$
  <link rel="stylesheet" href="$css$" />
$endfor$
$if(math)$
  $math$
$endif$
$for(header-includes)$
  $header-includes$
$endfor$
</head>
<body>
$for(include-before)$
$include-before$
$endfor$

<header>
<h1 class="title">$title$</h1>
<blockquote class="metadata">
$if(subtitle)$
<p class="subtitle">$subtitle$</p>
$endif$
$if(author)$
<p class="author">
  $if(author-url)$
    <a href="$author-url$">$author$</a>
  $else$
    $author$
  $endif$
</p>
$endif$
$if(date)$
<p class="date $if(toc)$before-toc$endif$"><time datetime="$date$">$date$</time></p>
$endif$
</blockquote>
<script src="vim-help.js"></script>
</header>

$if(toc)$
<nav id="$idprefix$TOC" role="doc-toc">
  $if(return-url)$
  <a href="$return-url$">$if(return-text)$$return-text$$else$← Return$endif$</a><br>
  $endif$
  <div style="text-align: center;">
    <a href="./index.html" style="margin-right: 10px;">HOME</a>
    <a href="./TOC.html" style="margin-right: 10px;">TOC</a>
    <a href="https://github.com/BirdeeHub/nixCats-nvim">REPO</a>
  </div>
  <label for="contents">Contents</label>
  <input type="checkbox" id="contents">
  $table-of-contents$
</nav>
$endif$

<style>
  h2[id^="function-library-nixCats.utils"] code {
    color: blue;
  }
  h2[id^="defaultpackagename."] {
    color: blue;
  }
</style>

<main>
<vim-help></vim-help>
$body$
</main>

$if(return-url)$
<footer>
<p class="signoff">
  <a href="$return-url$">$if(return-text)$$return-text$$else$← Return$endif$</a>
</p>
</footer>
$endif$
<script>
;(function() {
  // fixes the clicky headings for the headings in the generated nix docs
  var utils_func_selector = 'h2[id^="function-library-nixCats.utils"] code';
  document.querySelectorAll(utils_func_selector).forEach(element => {
    const parent = element.closest('h2');
    if (parent && parent.id) {
      const anchor = document.createElement('a');
      anchor.href = "#" + parent.id;
      anchor.innerHTML = element.innerHTML;
      element.replaceWith(anchor);
    }
  });
  var module_opt_selector = 'h2[id^="defaultpackagename."]';
  document.querySelectorAll(module_opt_selector).forEach(element => {
    const anchor = document.createElement('a');
    anchor.href = "#" + element.id;
    anchor.innerHTML = element.innerHTML;
    element.innerHTML = '';
    element.appendChild(anchor);
  });
})();
</script>
<script>
;(function() {
  // Non-essential if user has JavaScript off. Just makes checkboxes look nicer.
  var selector = '.task-list > li > input[type="checkbox"]';
  var checkboxes = document.querySelectorAll(selector);
  Array.from(checkboxes).forEach((checkbox) => {
    var wasChecked = checkbox.checked;
    checkbox.disabled = false;
    checkbox.addEventListener('click', (ev) => {ev.target.checked = wasChecked});
  });
})();
</script>
$for(include-after)$
$include-after$
$endfor$
</body>
</html>
